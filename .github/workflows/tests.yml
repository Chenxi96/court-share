name: Tests CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.1-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: court-share
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Test using Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - run: npm install
      - name: Wait for PostgreSQL
        run: until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done
        env:
          PGPASSWORD: password
      - run: npm run test:ci
        env:
          POSTGRES_PRISMA_URL: postgresql://postgres:password@localhost:5432/court-share?schema=public
      - uses: cypress-io/github-action@v6
        env:
          NEXT_PUBLIC_USE_TEST: 'true'
          AUTH_TRUST_HOST: true
          AUTH_SECRET: 't7qzCcwfnXL8guyR9aR082fOnZP+4c0+zT4s+2rKInGp'
          POSTGRES_PRISMA_URL: postgresql://postgres:password@localhost:5432/court-share?schema=public
        with:
          build: npm run build
          start: npm start
      
